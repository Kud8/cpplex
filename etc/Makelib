# Makefile to create libpilal.a as well as
# test files

# Compiler options
# Calls: $(CXX) $(CPPFLAGS) $(CXXFLAGS) -c -o $@ $<


PREFIX		=	.
CXX			=	g++
CXXFLAGS	= 	-Wall -W -Werror -pedantic-errors -g
CXXFLAGS	+= -Wmissing-braces -Wparentheses -ansi

# Directories

LIBDIR		=	$(PREFIX)/lib
BINDIR		=	$(PREFIX)/bin
SRCDIR		=	$(PREFIX)/src
PILDIR		=	$(SRCDIR)/pilal

# Pilal library compilation

AR			=	ar
ARFLAGS		=	crv
PILSRC		=	$(wildcard $(PILDIR)/*.o)
PILDST		=	$(LIBDIR)/libpilal.a

# Linker options
# Calls: $(CC) $(LDFLAGS) $^ $(LOADLIBES) $(LDLIBS) -o -$@

CC			=	g++
LDFLAGS		=	-L$(LIBDIR)
LDLIBS		=	-lpilal

# Cleaning options

RM			= 	rm -rf

# Files

SRCF		=	$(wildcard $(SRCDIR)/*.cc) $(wildcard $(PILDIR)/*.cc)
DEPS		=	$(SRCF:.cc=.d)
OBJS		=	$(SRCF:.cc=.o)
LOBC		=	$(wildcard $(PILDIR)/*.cc)
LOBJ		=	$(LOBC:.cc=.o)
LIBS		=	$(wildcard $(LIBDIR)/*.a)
BINS		=	$(BINDIR)/*

# Targets

.PHONY:	all library clean wipe

all: library $(BINDIR)/test clean

library: $(LIBDIR)/libpilal.a cleanlib

$(BINDIR)/test: $(SRCDIR)/test.o
	$(CC) $^ -o $@ $(LDFLAGS) $(LDLIBS)

$(LIBDIR)/libpilal.a: $(LOBJ)
	$(AR) $(ARFLAGS) $(LIBDIR)/libpilal.a $(LOBJ)

# Remove $(OBJS) and $(LOBJS) --> No, update them when needed

clean:
	$(RM) $(OBJS) $(DEPS)
	
cleanlib:
	$(RM) $(LOBJS) $(DEPS) 

wipe:
	$(RM) $(OBJS) $(LOBJS) $(LIBS) $(DEPS)

%.d: %.cc
	@set -e; rm -f $@; \
	$(CXX) -MM $(CPPFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$ \

include $(SRCF:.cc=.d)
